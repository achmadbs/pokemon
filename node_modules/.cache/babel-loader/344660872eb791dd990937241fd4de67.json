{"ast":null,"code":"var _jsxFileName = \"/Users/achmad/Documents/pokemon/src/components/pokemonDetails/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Body, DivWrap, Head, Wrapper, Text, Base } from './style';\nimport { Container, Grid, Card, Progress, Label, Loader } from 'semantic-ui-react';\nconst TYPE_COLORS = {\n  bug: 'B1C12E',\n  dark: '4F3A2D',\n  dragon: '755EDF',\n  electric: 'FCBC17',\n  fairy: 'F4B1F4',\n  fighting: '823551D',\n  fire: 'E73B0C',\n  flying: 'A3B3F7',\n  ghost: '6060B2',\n  grass: '74C236',\n  ground: 'D3B357',\n  ice: 'A3E7FD',\n  normal: 'C8C4BC',\n  poison: '934594',\n  psychic: 'ED4882',\n  rock: 'B9A156',\n  steel: 'B5B5C3',\n  water: '3295F6'\n};\n\nconst PokemonDetails = ({\n  match\n}) => {\n  const [pokeData, setPokeData] = useState([]);\n  const [pokeStatusList, setPokeStatusList] = useState({\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    specialAttack: '',\n    specialDefense: ''\n  });\n  const [desc, setDesc] = useState('');\n  const [types, setTypes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    getPokemonDetails();\n  }, []);\n\n  const getPokemonDetails = async () => {\n    var _rawSpecies$data;\n\n    const {\n      id\n    } = match.params;\n    setIsLoading(true);\n    const rawData = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`);\n    const detailsData = (rawData === null || rawData === void 0 ? void 0 : rawData.data) || [];\n    const rawSpecies = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${id}`);\n    const description = rawSpecies === null || rawSpecies === void 0 ? void 0 : (_rawSpecies$data = rawSpecies.data) === null || _rawSpecies$data === void 0 ? void 0 : _rawSpecies$data.flavor_text_entries;\n    let {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    } = '';\n    let descrip = '';\n    description.filter(desc => {\n      if (desc.version.name === 'alpha-sapphire' && desc.language.name === 'en') {\n        return descrip = desc.flavor_text;\n      }\n    });\n    const pokeType = detailsData.types.map(type => type.type.name);\n    detailsData.stats.map(stat => {\n      switch (stat.stat.name) {\n        case 'hp':\n          hp = stat.base_stat;\n          break;\n\n        case 'attack':\n          attack = stat.base_stat;\n          break;\n\n        case 'defense':\n          defense = stat.base_stat;\n          break;\n\n        case 'speed':\n          speed = stat.base_stat;\n          break;\n\n        case 'special-attack':\n          specialAttack = stat.base_stat;\n          break;\n\n        case 'special-defense':\n          specialDefense = stat.base_stat;\n          break;\n\n        default:\n          break;\n      }\n    });\n    setPokeData(detailsData);\n    setPokeStatusList({\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    });\n    setDesc(descrip);\n    setTypes(pokeType);\n    setIsLoading(true);\n  };\n\n  const renderLoading = () => {\n    return isLoading && React.createElement(Loader, {\n      active: true,\n      inline: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    });\n  };\n\n  const pokemonDetail = () => {\n    const {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    } = pokeStatusList;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Base, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Hp\")), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Base, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Attack\")), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Base, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Defense\")), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Base, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Speed\")), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Base, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"SpecialAttack\")), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Base, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"SpecialDefense\"))), React.createElement(Grid.Column, {\n      width: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, isLoading ? renderLoading() : React.createElement(React.Fragment, null, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      progress: \"value\",\n      value: hp,\n      color: \"purple\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      progress: \"value\",\n      value: attack,\n      color: \"purple\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      progress: \"value\",\n      value: defense,\n      color: \"purple\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      progress: \"value\",\n      value: speed,\n      color: \"purple\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      progress: \"value\",\n      value: specialAttack,\n      color: \"purple\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      progress: \"value\",\n      value: specialDefense,\n      color: \"purple\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }))))));\n  };\n\n  const pokeBaseStatus = () => {\n    const {\n      id,\n      name\n    } = pokeData;\n    const url = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;\n    return React.createElement(DivWrap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: url,\n      alt: \"pokemon\",\n      wrapped: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, name), pokemonDetail())));\n  };\n\n  const pokeStatus = () => {\n    const {\n      id\n    } = pokeData;\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      extra: true,\n      style: {\n        backgroundColor: 'rgba(192, 192, 192, 0.2)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"# \", id)), React.createElement(Grid.Column, {\n      width: 2,\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, types.map(type => {\n      return React.createElement(Label, {\n        key: type,\n        style: {\n          backgroundColor: `#${TYPE_COLORS[type]}`,\n          color: 'white',\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, type);\n    })))), pokeBaseStatus(), React.createElement(Base, {\n      desc: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, desc)));\n  };\n\n  return React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, pokeStatus(), console.log(types))));\n};\n\nexport default PokemonDetails;","map":{"version":3,"sources":["/Users/achmad/Documents/pokemon/src/components/pokemonDetails/index.js"],"names":["React","useState","useEffect","axios","Body","DivWrap","Head","Wrapper","Text","Base","Container","Grid","Card","Progress","Label","Loader","TYPE_COLORS","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","PokemonDetails","match","pokeData","setPokeData","pokeStatusList","setPokeStatusList","hp","attack","defense","speed","specialAttack","specialDefense","desc","setDesc","types","setTypes","isLoading","setIsLoading","getPokemonDetails","id","params","rawData","get","detailsData","data","rawSpecies","description","flavor_text_entries","descrip","filter","version","name","language","flavor_text","pokeType","map","type","stats","stat","base_stat","renderLoading","pokemonDetail","pokeBaseStatus","url","pokeStatus","width","backgroundColor","color","textTransform","height","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Body, DivWrap, Head, Wrapper, Text, Base } from './style';\nimport { Container, Grid, Card, Progress, Label, Loader } from 'semantic-ui-react';\n\nconst TYPE_COLORS = {\n  bug: 'B1C12E',\n  dark: '4F3A2D',\n  dragon: '755EDF',\n  electric: 'FCBC17',\n  fairy: 'F4B1F4',\n  fighting: '823551D',\n  fire: 'E73B0C',\n  flying: 'A3B3F7',\n  ghost: '6060B2',\n  grass: '74C236',\n  ground: 'D3B357',\n  ice: 'A3E7FD',\n  normal: 'C8C4BC',\n  poison: '934594',\n  psychic: 'ED4882',\n  rock: 'B9A156',\n  steel: 'B5B5C3',\n  water: '3295F6'\n};\n\nconst PokemonDetails = ({ match }) => {\n  const [pokeData, setPokeData] = useState([]);\n  const [pokeStatusList, setPokeStatusList] = useState({\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    specialAttack: '',\n    specialDefense: ''\n  });\n  const [desc, setDesc] = useState('');\n  const [types, setTypes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getPokemonDetails();\n  },[])\n\n  const getPokemonDetails = async() => {\n    const { id } = match.params;\n    setIsLoading(true);\n    const rawData = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`);\n    const detailsData = rawData?.data || [];\n    const rawSpecies = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${id}`);\n    const description = rawSpecies?.data?.flavor_text_entries;\n\n    let {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense,\n    } = ''\n\n    let descrip = ''\n\n    description.filter(desc => {\n      if(desc.version.name === 'alpha-sapphire' && desc.language.name === 'en') {\n        return descrip = desc.flavor_text\n      }\n    });\n\n    const pokeType = detailsData.types.map(type => type.type.name)\n\n    detailsData.stats.map(stat => {\n      switch(stat.stat.name) {\n        case 'hp':\n          hp = stat.base_stat;\n          break;\n        case 'attack':\n          attack = stat.base_stat;\n          break;\n        case 'defense':\n          defense = stat.base_stat;\n          break;\n        case 'speed':\n          speed = stat.base_stat;\n          break;\n        case 'special-attack':\n          specialAttack = stat.base_stat;\n          break;\n        case 'special-defense':\n          specialDefense = stat.base_stat;\n          break;\n        default:\n          break;\n      }\n    });\n\n    setPokeData(detailsData);\n    setPokeStatusList({\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    });\n    setDesc(descrip);\n    setTypes(pokeType);\n    setIsLoading(true);\n  }\n\n  const renderLoading = () => {\n    return isLoading && (\n      <Loader active inline='centered'/>\n    );\n  }\n\n  const pokemonDetail = () => {\n    const { hp, attack, defense, speed, specialAttack, specialDefense } = pokeStatusList;\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={4}>\n            <Grid.Row>\n              <Base>Hp</Base>\n            </Grid.Row>\n            <Grid.Row>\n              <Base>Attack</Base>\n            </Grid.Row>\n            <Grid.Row>\n              <Base>Defense</Base>\n            </Grid.Row>\n            <Grid.Row>\n              <Base>Speed</Base>\n            </Grid.Row>\n            <Grid.Row>\n              <Base>SpecialAttack</Base>\n            </Grid.Row>\n            <Grid.Row>\n              <Base>SpecialDefense</Base>\n            </Grid.Row>\n          </Grid.Column>\n          <Grid.Column width={9}>\n            {\n              isLoading ? renderLoading() : \n              <>\n                <Grid.Row>\n                  <Progress progress='value' value={hp} color='purple' size='small'/>\n                </Grid.Row>\n                <Grid.Row>\n                  <Progress progress='value' value={attack} color='purple' size='small'/>\n                </Grid.Row>\n                  <Grid.Row>\n                  <Progress progress='value' value={defense} color='purple' size='small'/>\n                </Grid.Row>\n                <Grid.Row>\n                  <Progress progress='value' value={speed} color='purple' size='small'/>\n                </Grid.Row>\n                <Grid.Row>\n                  <Progress progress='value' value={specialAttack} color='purple' size='small'/>\n                </Grid.Row>\n                <Grid.Row>\n                  <Progress progress='value' value={specialDefense} color='purple' size='small'/>\n                </Grid.Row>\n              </>\n            }\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  }\n\n  const pokeBaseStatus = () => {\n    const { id, name } = pokeData\n    const url = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;\n    return (\n      <DivWrap>\n        <Grid columns={16}>\n          <Grid.Column width={5}>\n            <img src={url} alt=\"pokemon\" wrapped='true'/>\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <Text>{name}</Text>\n            {pokemonDetail()}\n          </Grid.Column>\n        </Grid>\n      </DivWrap>\n    );\n  }\n\n  const pokeStatus = () => {\n    const { id } = pokeData;\n    return (\n      <Wrapper>\n        <Card style={{width: '100%'}}>\n          <Card.Content extra style={{backgroundColor: 'rgba(192, 192, 192, 0.2)',}}>\n            <Grid>\n              <Grid.Column width={2}>\n                <Head># {id}</Head>\n              </Grid.Column>\n              <Grid.Column width={2} floated='right'>\n                {\n                  types.map(type => {\n                    return (\n                      <Label key={type} style={{backgroundColor: `#${TYPE_COLORS[type]}`,color: 'white', textTransform:'capitalize'}}>\n                        {type}\n                      </Label>\n                    );\n                  })\n                }\n              </Grid.Column>\n            </Grid>\n          </Card.Content>\n            {pokeBaseStatus()}\n            <Base desc>{desc}</Base>\n        </Card>\n      </Wrapper>     \n    );\n  }\n\n  return (\n    <Body>\n      <Container>\n        <div style={{height: '100vh'}}>\n          {pokeStatus()}\n          {console.log(types)}\n        </div>\n      </Container>\n    </Body>\n  )\n}\n\nexport default PokemonDetails"]},"metadata":{},"sourceType":"module"}